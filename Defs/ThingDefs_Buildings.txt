<?xml version="1.0" encoding="utf-8" ?>
<Defs>
 
   <ThingDef ParentName="BuildingBase"> 
    <defName>TestSpawner</defName>
    <label>Test Spawner</label>
    <thingClass>Building</thingClass>
    <graphicData>
      <texPath>dev/spawner</texPath>
      <graphicClass>Graphic_single</graphicClass>
      <drawSize>(1,1)</drawSize>
    </graphicData>
    <altitudeLayer>Building</altitudeLayer>
    <passability>PassThroughOnly</passability>
    <pathCost>150</pathCost>
    <blockWind>true</blockWind>
    <fillPercent>1.0</fillPercent>
    <castEdgeShadows>false</castEdgeShadows>
    <rotatable>false</rotatable>
    <statBases>
      <MaxHitPoints>300</MaxHitPoints>
      <WorkToBuild>2500</WorkToBuild>
      <Flammability>1.0</Flammability>
    </statBases>
    <tickerType>Normal</tickerType>
    <description>Borg transwarp coil arrays</description>
    <canOverlapZones>false</canOverlapZones>
    <size>(1,1)</size>
    <comps>
	<li Class="PRimUtility.CompProperties_PawnSpawner">
		<isPlayer>false</isPlayer>
		<thirdsBetweenSpawns>15</thirdsBetweenSpawns> <!-- 1 third = 1/60 of a second -->
		<numberToSpawn>1</numberToSpawn>
		<pawnKind>Megaspider</pawnKind>
		<newborn>false</newborn>
		<selfDestruct>true</selfDestruct>
		<isProxy>true</isProxy>
		<isDeadSwitch>false</isDeadSwitch>
		<getDrops>true</getDrops>
		<proxyRadius>3</proxyRadius>
		<lordJob>defendBase</lordJob>
      </li>
    
      <li Class="CompProperties_Glower">
        <glowRadius>4</glowRadius>
        <glowColor>(57,236,95,0)</glowColor>
      </li>    
    </comps>
    <terrainAffordanceNeeded>Heavy</terrainAffordanceNeeded>
    <designationCategory>Power</designationCategory>
    <staticSunShadowHeight>0.3</staticSunShadowHeight>
    <designationHotKey>Misc3</designationHotKey>
  </ThingDef>
  
  
  
   <!--ThingDef ParentName="BuildingBase"> 
    <defName>DungeonEnterance</defName>
    <label>Dungeon Enterance</label>
    <thingClass>PRimUtility.Building_DungeonEnterance</thingClass>
    <graphicData>
      <texPath>dev/stairsdown</texPath>
      <graphicClass>Graphic_single</graphicClass>
      <drawSize>(1,1)</drawSize>
    </graphicData>
    <altitudeLayer>Building</altitudeLayer>
    <passability>PassThroughOnly</passability>
    <pathCost>150</pathCost>
    <blockWind>true</blockWind>
	<useHitPoints>False</useHitPoints>
    <fillPercent>1.0</fillPercent>
    <castEdgeShadows>false</castEdgeShadows>
    <rotatable>false</rotatable>
    <statBases>
      
      <WorkToBuild>2500</WorkToBuild>
      <Flammability>0.0</Flammability>
    </statBases>

    <tickerType>Normal</tickerType>
    <description>Borg transwarp coil arrays</description>
    <canOverlapZones>false</canOverlapZones>
    <size>(1,1)</size>

    <terrainAffordanceNeeded>Heavy</terrainAffordanceNeeded>
    <designationCategory>Power</designationCategory>
    <staticSunShadowHeight>0.3</staticSunShadowHeight>
    <designationHotKey>Misc3</designationHotKey>
  </ThingDef-->
  
  
    <PRimUtility.LabyrinthDef>
		<defName>ExampleLabyrinth</defName>
		<label>ExampleLabyrinth</label>

		<isFilled>true</isFilled>
        <isWalled>true</isWalled>
        <isOutlined>true</isOutlined>
        <isRoofed>false</isRoofed>
        <isShellRoofed>true</isShellRoofed>
        <isShellFloored>false</isShellFloored>
        <isCaveLike>false</isCaveLike>
        <!--isUsingRange>true</isUsingRange-->
        <!--isNodeRand>false</isNodeRand-->
        <!--isDirConnect>true</isDirConnect-->
        <!--isSegmented>true</isSegmented--> 
        <!--isDoored>true</isDoored-->
        <isInZDir>false</isInZDir>
        <isInPosDir>true</isInPosDir>
        <isOutZDir>false</isOutZDir>
        <isOutPosDir>false</isOutPosDir>
        <isWalkIn>true</isWalkIn>
        <isWalkOut>true</isWalkOut>
		
        <isOutDoored>false</isOutDoored>
		
        <UseBlockFloors>true</UseBlockFloors>

        <SpaceCorner>(10,0,10)</SpaceCorner>		<!-- (x,z) location of min x and z values for the rectangular area of labyrinth -->
        <SpaceVector>(290,0,290)</SpaceVector>		<!-- (x,z) location of max x and z values for the rectangular area of labyrinth  -->
        <!--BufferWidth>0</BufferWidth-->		<!-- number of cells that will outer wall of the labyrinth  -->
        <!--DivCount>0</DivCount-->
        <!--JumpRange>30</JumpRange--> 			<!--JumpRange = (PathWidth+1)*5 -->
        <PathWidth>5</PathWidth>
        <BlockDefName>Wall</BlockDefName>
        <FloorDefName>TileSandstone</FloorDefName>
        <DoorDefName>Door</DoorDefName>
        <BlockStuffDefName>WoodLog</BlockStuffDefName>
        <FloorBlockDefName>WaterDeep</FloorBlockDefName>
        <DoorStuffDefName>WoodLog</DoorStuffDefName>
        <encounterDefNames>
			<li>testEncounter</li>
			<li>testEncounter</li>
		</encounterDefNames>
        <lootDefNames>
			<li>testEncounter</li>
		</lootDefNames>
        <MapSize>(300,1,300)</MapSize>
        <WorldObjName>ExampleMapParent</WorldObjName>

        <TileElevation>100</TileElevation>
        
        <TileHilliness>1</TileHilliness>
        <TileRainfall>0</TileRainfall>
        <TileSwampiness>0</TileSwampiness>
		<TileTemperature>20</TileTemperature>
        
        <TileBiome>Dessert</TileBiome>
        
        <ConditionTile>false</ConditionTile>
		<IsLinked>false</IsLinked>
		<LinkedLabyrinthDefNames>
		
		</LinkedLabyrinthDefNames>
        
  </PRimUtility.LabyrinthDef>
  



  <PRimUtility.EncounterDef>
  		<defName>testEncounter</defName>
		<label>testEncounter</label>
        <enemySpawnerNames>
			<li>TestSpawner</li>
		</enemySpawnerNames>
        <lootSpawnerNames>
			<li>TestSpawner</li>
		</lootSpawnerNames>
        <encounterLevel>1</encounterLevel>
        <SpawnSpread>1</SpawnSpread>
        <makeRoom>true</makeRoom>
        <roomSize>(4,0,4)</roomSize>
  </PRimUtility.EncounterDef>
  

	
	
	<WorldObjectDef>
		<defName>ExampleMapParent</defName>
		<label>ExampleMapParent</label>
		<description>One of what could be many, many moons orbiting this rimworld.</description>
		<worldObjectClass>MapParent</worldObjectClass>
		<texture>dev/stairsdown</texture>
		<useDynamicDrawer>false</useDynamicDrawer>
		<expandingIcon>true</expandingIcon>
		<expandingIconTexture>dev/stairsdown</expandingIconTexture>
		<mapGenerator>LabyrinthMap</mapGenerator>
		<expandingIconPriority>6</expandingIconPriority>
		<comps>
			<li Class="WorldObjectCompProperties_Abandon" />
		</comps>
	</WorldObjectDef>
	
	<MapGeneratorDef Name="LabyrinthMap">
	<defName>LabyrinthMap</defName>
		<genSteps>
			<!--li>FindPlayerStartSpot</li!-->
			<li>ElevationFertility</li>
			<li>Caves</li>
			<!--li>RocksFromGrid</li-->
			<li>Terrain</li>
			<!--li>CavesTerrain</li-->
			<li>RockChunks</li>
			<li>Labyrinth</li>
			<li>Fog</li>
		</genSteps>
	</MapGeneratorDef>
  
  	<GenStepDef>
	<defName>Labyrinth</defName>
	<order>501</order>
	<genStep Class="PRimUtility.GenStep_Labyrinth" />
	</GenStepDef>
  
  

  <ScenPartDef>
    <defName>PrimLabyrinth</defName>
    <label>An example Labyrinth</label>
    <scenPartClass>PRimUtility.Scen_Laby</scenPartClass>
    <category>StartingImportant</category>
    <selectionWeight>1.0</selectionWeight>
    <summaryPriority>999</summaryPriority>
  </ScenPartDef>
  
   
  </Defs>